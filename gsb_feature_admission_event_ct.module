<?php
/**
 * @file
 * Code for the GSB Feature Admission Event Content Type feature.
 */

include_once 'gsb_feature_admission_event_ct.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gsb_feature_admission_event_ct_form_admission_event_node_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id != 'admission_event_node_form') {
    return;
  }

  $form['field_item_id']['#access'] = FALSE;

  $language = $form['language']['#value'];
  // make address field not required and add conditional visibility
  foreach ($form['field_event_location'][$language] as $key => $value) {
    if (is_numeric($key) && $key >= 0) {
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['street_block']['thoroughfare']['#required'] = FALSE;
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['administrative_area']['#required'] = FALSE;
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['locality']['#required'] = FALSE;
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['postal_code']['#required'] = FALSE;

      $form['field_event_location'][$language][$key]['field_address']['#states'] = array(
        'invisible' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('value' => (string)'Online'),
        )
      );
      $form['field_event_location'][$language][$key]['field_link_map']['#states'] = array(
        'invisible' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('value' => (string)'Online'),
        )
      );

      // Add requred marker based on event type
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['street_block']['thoroughfare']['#states'] = array(
        'required' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('!value' => (string)'Online'),
        )
      );
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['administrative_area']['#states'] = array(
        'required' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('!value' => (string)'Online'),
        )
      );
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['locality']['#states'] = array(
        'required' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('!value' => (string)'Online'),
        )
      );
      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['postal_code']['#states'] = array(
        'required' => array(
          ':input[name="field_event_location[und][' . $key . '][field_event_location_type][' . $language . ']"]' => array('!value' => (string)'Online'),
        )
      );

      $form['field_event_location'][$language][$key]['field_address'][$language][0]['locality_block']['postal_code']['#title'] = 'Zip Code';
    }
  }


  $form['field_link_single']['#states'] = array(
    'invisible' => array(
      ':input[name="field_event_detail[' . $language . ']"],value="1"' => array('!value' => (string)'1'),
    ),
    'required' => array(
      ':input[name="field_event_detail[' . $language . ']"]' => array('value' => (string)'1'),
    ),
  );

  $form['field_body']['#states'] = array(
    'invisible' => array(
      ':input[name="field_event_detail[' . $language . ']"]' => array('value' => (string)'1'),
    ),
    'required' => array(
      ':input[name="field_event_detail[' . $language . ']"]' => array('value' => (string)'0'),
    ),
  );

  // show/hide the admission event detail related fields
  $hide_detail_fields = array(
    'field_person_ref',
    'field_event_speakers',
    'field_link_event_more_info',
    'field_schedule',
    'field_email',
    'field_person_title',
    'field_register_url',
    'field_date_time'
  );

  foreach ($hide_detail_fields as $field_name) {
    $form[$field_name]['#states'] = array(
      'invisible' => array(
        ':input[name="field_event_detail[' . $language . ']"]' => array('value' => (string)'1'),
      ),
    );
  }

  drupal_add_js(drupal_get_path('module', 'gsb_feature_admission_event_ct') . '/js/gsb_feature_admission_event_ct.js');

  $form['field_event_speakers']['#after_build'] = array('gsb_feature_admission_event_ct_after_build');

  // Perform additional validation.
  $form['#validate'][] = 'gsb_feature_admission_event_ct_form_validate';
}

/**
 * gsb_feature_admission_event_ct_after_build().
 */
function gsb_feature_admission_event_ct_after_build($form, &$form_state) {
  $language = $form['#language'];
  foreach ($form[$language] as $key => $value) {
    if (is_numeric($key) && $key >= 0) {

      // Remove N/A option from feature type and media format radio button
      unset($form[$language][$key]['field_speakers_person_type'][$language]['#options']['_none']);
      unset($form[$language][$key]['field_speakers_person_type'][$language]['_none']);

      // Change to apply #states for Speakers to show hide fields
      $form[$language][$key]['field_first_name']['#states']['invisible'] = array(
        ':input[name="field_event_speakers[' . $language . '][' . $key . '][field_speakers_person_type][' . $language . ']"]' => array(
          array('value' => '0'),
        ),
      );

      $form[$language][$key]['field_last_name']['#states']['invisible'] = array(
        ':input[name="field_event_speakers[' . $language . '][' . $key . '][field_speakers_person_type][' . $language . ']"]' => array(
          array('value' => '0'),
        ),
      );

      $form[$language][$key]['field_link_single']['#states']['invisible'] = array(
        ':input[name="field_event_speakers[' . $language . '][' . $key . '][field_speakers_person_type][' . $language . ']"]' => array(
          array('value' => '0'),
        ),
      );

      $form[$language][$key]['field_person_ref']['#states']['invisible'] = array(
        ':input[name="field_event_speakers[' . $language . '][' . $key . '][field_speakers_person_type][' . $language . ']"]' => array(
          array('value' => '1'),
        ),
      );
    }
  }

  return $form;
}

/**
 * Validate callback
 *  - Conditionally validate field.
 */
function gsb_feature_admission_event_ct_form_validate($form, &$form_state) {
  $language = $form['language']['#value'];
  $values = $form_state['values'];
  // Validate the conditional mandatory fields.
  if ($values['field_event_detail'][$language][0]['value'] == '1') {
    if (empty($values['field_link_single'][$language][0]['url'])) {
      $field_label = $form['field_link_single'][$language]['#title'];
      form_set_error('field_link_single]['.$language.'][0][url', $field_label . ' field is required.');
    }
  }
  if ($values['field_event_detail'][$language][0]['value'] == '0') {
    if (empty($values['field_body'][$language][0]['value'])) {
      $field_label = $form['field_body'][$language]['#title'];
      form_set_error('field_body]['.$language.'][0][value', $field_label . ' field is required.');
    }
  }

  // Validate the address field based on event type
  foreach ($form_state['values']['field_event_location'][$language] as $key => $value) {
    if (is_numeric($key) && $key >= 0) {
      if ($values['field_event_location'][$language][$key]['field_event_location_type'][$language][0]['value'] != 'Online') {
        if (empty($values['field_event_location'][$language][$key]['field_address'][$language][0]['thoroughfare'])) {
          $field_label = 'Address 1';
          form_set_error('field_event_location]['.$language.']['.$key.'][field_address]['.$language.'][0][thoroughfare', $field_label . ' field is required.');
        }
        if (empty($values['field_event_location'][$language][$key]['field_address'][$language][0]['administrative_area'])) {
          $field_label = 'State';
          form_set_error('field_event_location]['.$language.']['.$key.'][field_address]['.$language.'][0][administrative_area', $field_label . ' field is required.');
        }
        if (empty($values['field_event_location'][$language][$key]['field_address'][$language][0]['locality'])) {
          $field_label = 'City';
          form_set_error('field_event_location]['.$language.']['.$key.'][field_address]['.$language.'][0][locality', $field_label . ' field is required.');
        }
        if (empty($values['field_event_location'][$language][$key]['field_address'][$language][0]['postal_code'])) {
          $field_label = 'Zip Code';
          form_set_error('field_event_location]['.$language.']['.$key.'][field_address]['.$language.'][0][postal_code', $field_label . ' field is required.');
        }
      }
    }
  }
}
